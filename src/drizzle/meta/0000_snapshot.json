{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "full_name": {
          "name": "full_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "company_name": {
          "name": "company_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_type": {
          "name": "user_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'agent'"
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_verified": {
          "name": "is_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "approval_status": {
          "name": "approval_status",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'pending'"
        },
        "approved_by": {
          "name": "approved_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "approved_at": {
          "name": "approved_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "rejection_reason": {
          "name": "rejection_reason",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profiles_user_id_fkey": {
          "name": "profiles_user_id_fkey",
          "tableFrom": "profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "profiles_user_id_key": {
          "columns": [
            "user_id"
          ],
          "nullsNotDistinct": false,
          "name": "profiles_user_id_key"
        }
      },
      "checkConstraints": {
        "profiles_approval_status_check": {
          "name": "profiles_approval_status_check",
          "value": "approval_status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text])"
        },
        "profiles_user_type_check": {
          "name": "profiles_user_type_check",
          "value": "user_type = ANY (ARRAY['agent'::text, 'solicitor'::text, 'conveyancer'::text, 'admin'::text])"
        }
      },
      "policies": {
        "Users can insert their own profile": {
          "name": "Users can insert their own profile",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ],
          "withCheck": "(auth.uid() = user_id)"
        },
        "Users can update their own profile": {
          "name": "Users can update their own profile",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Users can view their own profile": {
          "name": "Users can view their own profile",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.user_groups": {
      "name": "user_groups",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'agency'"
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "contact_email": {
          "name": "contact_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "user_groups_type_check": {
          "name": "user_groups_type_check",
          "value": "type = ANY (ARRAY['agency'::text, 'law_firm'::text, 'conveyancer'::text])"
        }
      },
      "policies": {
        "Admins can manage all groups": {
          "name": "Admins can manage all groups",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "using": "(EXISTS ( SELECT 1\n   FROM profiles\n  WHERE ((profiles.user_id = auth.uid()) AND (profiles.user_type = 'admin'::text))))"
        },
        "Users can view groups they belong to": {
          "name": "Users can view groups they belong to",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.user_group_members": {
      "name": "user_group_members",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "group_id": {
          "name": "group_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'member'"
        },
        "joined_at": {
          "name": "joined_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_group_members_group_id_fkey": {
          "name": "user_group_members_group_id_fkey",
          "tableFrom": "user_group_members",
          "tableTo": "user_groups",
          "schemaTo": "public",
          "columnsFrom": [
            "group_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_group_members_user_id_group_id_key": {
          "columns": [
            "user_id",
            "group_id"
          ],
          "nullsNotDistinct": false,
          "name": "user_group_members_user_id_group_id_key"
        }
      },
      "checkConstraints": {
        "user_group_members_role_check": {
          "name": "user_group_members_role_check",
          "value": "role = ANY (ARRAY['admin'::text, 'member'::text])"
        }
      },
      "policies": {
        "Admins can manage group memberships": {
          "name": "Admins can manage group memberships",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "using": "(EXISTS ( SELECT 1\n   FROM profiles\n  WHERE ((profiles.user_id = auth.uid()) AND (profiles.user_type = 'admin'::text))))"
        },
        "Users can view their own group memberships": {
          "name": "Users can view their own group memberships",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.usage_reports": {
      "name": "usage_reports",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "group_id": {
          "name": "group_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "api_endpoint": {
          "name": "api_endpoint",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "requests_count": {
          "name": "requests_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "report_date": {
          "name": "report_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_DATE"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "usage_reports_group_id_fkey": {
          "name": "usage_reports_group_id_fkey",
          "tableFrom": "usage_reports",
          "tableTo": "user_groups",
          "schemaTo": "public",
          "columnsFrom": [
            "group_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "usage_reports_group_id_user_id_api_endpoint_report_date_key": {
          "columns": [
            "group_id",
            "user_id",
            "api_endpoint",
            "report_date"
          ],
          "nullsNotDistinct": false,
          "name": "usage_reports_group_id_user_id_api_endpoint_report_date_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Admins can manage all usage reports": {
          "name": "Admins can manage all usage reports",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "using": "(EXISTS ( SELECT 1\n   FROM profiles\n  WHERE ((profiles.user_id = auth.uid()) AND (profiles.user_type = 'admin'::text))))"
        },
        "Users can view their own usage reports": {
          "name": "Users can view their own usage reports",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.data_integrations": {
      "name": "data_integrations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "api_type": {
          "name": "api_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_enabled": {
          "name": "is_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "configuration": {
          "name": "configuration",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "usage_quota": {
          "name": "usage_quota",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "current_usage": {
          "name": "current_usage",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "data_integrations_api_type_check": {
          "name": "data_integrations_api_type_check",
          "value": "api_type = ANY (ARRAY['google_maps'::text, 'corelogic'::text, 'qld_globe'::text, 'docusign'::text, 'council_api'::text])"
        }
      },
      "policies": {
        "All authenticated users can view integrations": {
          "name": "All authenticated users can view integrations",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Only admins can manage integrations": {
          "name": "Only admins can manage integrations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.disclosure_forms": {
      "name": "disclosure_forms",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "form_data": {
          "name": "form_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "property_address": {
          "name": "property_address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "property_details": {
          "name": "property_details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'draft'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "submitted_at": {
          "name": "submitted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "signed_at": {
          "name": "signed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "pdf_generated_at": {
          "name": "pdf_generated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "pdf_url": {
          "name": "pdf_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "signature_data": {
          "name": "signature_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "witness_data": {
          "name": "witness_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "document_version": {
          "name": "document_version",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        }
      },
      "indexes": {
        "idx_disclosure_forms_created_at": {
          "name": "idx_disclosure_forms_created_at",
          "columns": [
            {
              "expression": "created_at",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_disclosure_forms_status": {
          "name": "idx_disclosure_forms_status",
          "columns": [
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_disclosure_forms_user_id": {
          "name": "idx_disclosure_forms_user_id",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "disclosure_forms_status_check": {
          "name": "disclosure_forms_status_check",
          "value": "status = ANY (ARRAY['draft'::text, 'submitted'::text, 'signed'::text, 'completed'::text])"
        }
      },
      "policies": {
        "Users can create their own disclosure forms": {
          "name": "Users can create their own disclosure forms",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ],
          "withCheck": "(auth.uid() = user_id)"
        },
        "Users can update their own disclosure forms": {
          "name": "Users can update their own disclosure forms",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Users can view their own disclosure forms": {
          "name": "Users can view their own disclosure forms",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.disclosure_documents": {
      "name": "disclosure_documents",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "disclosure_form_id": {
          "name": "disclosure_form_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "file_name": {
          "name": "file_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_type": {
          "name": "file_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_size": {
          "name": "file_size",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "storage_path": {
          "name": "storage_path",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "document_category": {
          "name": "document_category",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "uploaded_at": {
          "name": "uploaded_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "is_required": {
          "name": "is_required",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        }
      },
      "indexes": {
        "idx_disclosure_documents_form_id": {
          "name": "idx_disclosure_documents_form_id",
          "columns": [
            {
              "expression": "disclosure_form_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "disclosure_documents_disclosure_form_id_fkey": {
          "name": "disclosure_documents_disclosure_form_id_fkey",
          "tableFrom": "disclosure_documents",
          "tableTo": "disclosure_forms",
          "schemaTo": "public",
          "columnsFrom": [
            "disclosure_form_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can manage their own disclosure documents": {
          "name": "Users can manage their own disclosure documents",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can view their own disclosure documents": {
          "name": "Users can view their own disclosure documents",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.audit_logs": {
      "name": "audit_logs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "disclosure_form_id": {
          "name": "disclosure_form_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "action": {
          "name": "action",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "details": {
          "name": "details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "ip_address": {
          "name": "ip_address",
          "type": "inet",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_audit_logs_created_at": {
          "name": "idx_audit_logs_created_at",
          "columns": [
            {
              "expression": "created_at",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_audit_logs_user_id": {
          "name": "idx_audit_logs_user_id",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "audit_logs_disclosure_form_id_fkey": {
          "name": "audit_logs_disclosure_form_id_fkey",
          "tableFrom": "audit_logs",
          "tableTo": "disclosure_forms",
          "schemaTo": "public",
          "columnsFrom": [
            "disclosure_form_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Admins can view all audit logs": {
          "name": "Admins can view all audit logs",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(EXISTS ( SELECT 1\n   FROM profiles\n  WHERE ((profiles.user_id = auth.uid()) AND (profiles.user_type = 'admin'::text))))"
        },
        "All authenticated users can insert audit logs": {
          "name": "All authenticated users can insert audit logs",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can view their own audit logs": {
          "name": "Users can view their own audit logs",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.api_usage_logs": {
      "name": "api_usage_logs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "disclosure_form_id": {
          "name": "disclosure_form_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "api_provider": {
          "name": "api_provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "api_endpoint": {
          "name": "api_endpoint",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "request_data": {
          "name": "request_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "response_data": {
          "name": "response_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "status_code": {
          "name": "status_code",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "cost_credits": {
          "name": "cost_credits",
          "type": "numeric(10, 4)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_api_usage_logs_created_at": {
          "name": "idx_api_usage_logs_created_at",
          "columns": [
            {
              "expression": "created_at",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_api_usage_logs_user_id": {
          "name": "idx_api_usage_logs_user_id",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "api_usage_logs_disclosure_form_id_fkey": {
          "name": "api_usage_logs_disclosure_form_id_fkey",
          "tableFrom": "api_usage_logs",
          "tableTo": "disclosure_forms",
          "schemaTo": "public",
          "columnsFrom": [
            "disclosure_form_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Admins can view all API usage logs": {
          "name": "Admins can view all API usage logs",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(EXISTS ( SELECT 1\n   FROM profiles\n  WHERE ((profiles.user_id = auth.uid()) AND (profiles.user_type = 'admin'::text))))"
        },
        "Users can view their own API usage logs": {
          "name": "Users can view their own API usage logs",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {}
  }
}